version: '1.0'
stages:
  - build_unit_test
  - unit_test
  - build_e2e_test
  - e2e_test
  - push_release_image
  - update_service

steps:
  BuildUnitTestEnvironment:
    title: Build Unit Test Environment
    type: build
    image_name: mcbhenwood/a2siservicesapi-unittest
    working_directory: ./services
    dockerfile: Dockerfile.ci
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    stage: build_unit_test

  BuildLinterDockerImage:
    title: Build Linter Docker Image
    type: build
    image_name: mcbhenwood/pycodestyle
    working_directory: ./pycodestyle
    dockerfile: Dockerfile
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    stage: build_unit_test

  LintCodebase:
    title: Lint the Django codebase
    image: '${{BuildLinterDockerImage}}'
    commands:
      - pycodestyle ./services
    stage: unit_test

  RunDjangoTest:
    title: "Run the Django unit & functional tests"
    image: '${{BuildUnitTestEnvironment}}'
    commands:
      - /code/manage.py test /code
    environment:
      - DJANGO_SECRET_KEY=NotReallyASecret
    stage: unit_test

  BuildProd:
    title: Build Prod Environment (release candidate)
    type: build
    image_name: mcbhenwood/a2siservicesapi
    working_directory: ./services
    dockerfile: Dockerfile.prod
    tag: latest
    stage: build_e2e_test

  BuildE2ETestAPI:
    title: Build the API End-to-End tests
    type: build
    image_name: mcbhenwood/a2siservicesapi-e2etest-api
    working_directory: ./e2e-test-api
    dockerfile: Dockerfile.ci
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    stage: build_e2e_test

  BuildE2ETestUI:
    title: Build the UI End-to-End tests
    type: build
    image_name: mcbhenwood/a2siservicesapi-e2etest-ui
    working_directory: ./e2e-test-ui
    dockerfile: Dockerfile.ci
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    stage: build_e2e_test

  RunE2ETestAPI:
    title: "Run the API End-to-End tests"
    type: composition
    working_directory: ./
    composition:
      version: '2'
      services:
        api:
          image: '${{BuildProd}}'
          environment:
            DJANGO_HOSTNAME: "api"
            DJANGO_SECRET_KEY: "ThisIsNotReallyASecret"
          ports:
            - 8000
    composition_candidates:
      e2etest:
        image: '${{BuildE2ETestAPI}}'
        environment:
          API_HOST: "api"
          API_PORT: "8000"
          API_SCHEME: "http"
        links:
          - api
    stage: e2e_test

  RunE2ETestUI:
    title: "Run the UI End-to-End tests"
    type: composition
    working_directory: ./
    composition:
      version: '2'
      services:
        api:
          image: '${{BuildProd}}'
          environment:
            DJANGO_HOSTNAME: "api"
            DJANGO_SECRET_KEY: "ThisIsNotReallyASecret"
          ports:
            - 8000
    composition_candidates:
      e2etest:
        image: '${{BuildE2ETestUI}}'
        environment:
          API_HOST: "api"
          API_PORT: "8000"
          API_SCHEME: "http"
        links:
          - api
    stage: e2e_test

  PushReleaseImage:
    type: push
    title: "[MASTER] Push new service release to Docker Hub"
    candidate: '${{BuildProd}}'
    image_name: 'mcbhenwood/a2si-services-api'
    registry: dockerhub
    tag: latest
    stage: push_release_image
    # when:
    #  branch:
    #    only:
    #      - master

  PushStaticAssets:
    image: '${{BuildUnitTestEnvironment}}'
    commands:
      - ./services/manage.py collectstatic --noinput
    environment:
      - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
      - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
      - AWS_S3_REGION_NAME=eu-west-2
      - AWS_STORAGE_BUCKET_NAME=static.a2sisap.mcbhenwood.com
      - DJANGO_SECRET_KEY=NotReallyASecret
    stage: update_service

  UpdateServiceImage:
    title: "[MASTER] Update ECS service with new Docker Hub image"
    image: codefresh/cf-deploy-ecs
    commands:
      - cfecs-update --image-name mcbhenwood/a2si-services-api --image-tag latest eu-west-2 ProdRealAPI ProdRealAPI
    environment:
      - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
      - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
    stage: update_service
    #when:
    #  branch:
    #    only:
    #      - master
